name: Rails Tests

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v1

    - name: Install Ruby version specified in `.ruby-version`
      uses: eregon/use-ruby-action@master

    - name: Setup cache key and directory for gems cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}

    - name: Install PostgreSQL headers
      run: |
        sudo apt-get -yqq install libpq-dev
    
    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
      
    - name: Get Yarn cache directory path
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
    
    - name: Setup cache key and directory for node_modules cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    
    - name: Bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
          
    - name: Install Yarn
      run: |
        npm install -g yarn
        yarn install
    
    - name: Change database file
      run: |
        cp config/database.yml.github config/database.yml
    
    - name: Setup Code Climate test-reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build

    - name: Rails test
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        CI: true
        RAILS_ENV: test
      run: |
        bundle exec rails db:setup
        bundle exec rspec

    - name: Publish code coverage
      run: |
        export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
        ./cc-test-reporter after-build -r ${{secrets.CC_TEST_REPORTER_ID}}