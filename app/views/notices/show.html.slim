- content_for :title, "Notice of Non-Compliance ##{@notice.notice_number}"
- content_for :breadcrumbs, breadcrumbs_helper([['My active notices', notices_path], yield(:title)])
.section-wrapper.pd-20
  label.section-title Notice Details
  table.table.table-striped
    thead
      tr
        th scope="row" colspan="5" Cemetery Information
    tbody
      tr
        th.wd-20p scope="row" Notice Number
        td colspan="4"
          == "#{@notice.notice_number} (#{link_to 'download', '#', id: 'download-notice'})"
      tr
        th scope="row" Cemetery
        td colspan="4" == "#{link_to @notice.cemetery.name, @notice.cemetery} (##{@notice.cemetery.cemetery_id})"
      tr
        th scope="row" Served On
        td colspan="4" == "#{@notice.served_on_name}<br />#{@notice.served_on_street_address}<br />#{@notice.served_on_city}, #{@notice.served_on_state} #{@notice.served_on_zip}"
  table.table.table-striped
    thead
      tr
        th scope="row" colspan="5" Violation Information
    tbody
      tr
        th.wd-20p scope="row" Law Sections
        td colspan="4" == simple_format(@notice.law_sections)
      tr
        th scope="row" Specific Information
        td colspan="4" == simple_format(@notice.specific_information)
.section-wrapper.pd-20.mg-t-5
  label.section-title Actions
  #non-compliance-notice-multi-step-form.multi_step_form [data-display-section=Notice.statuses[@notice.status]]
    = form_with model: @notice, path: response_received_notice_path, class: 'msform' do |f|
      ul.progressbar
        li class=[active_item(true)] Notice Issued
        li class=[active_item(!@notice.issued?)] Response Received
        li class=[active_item(@notice.follow_up_completed? || @notice.resolved?)] Follow-Up Completed
        li class=[active_item(@notice.resolved?)] Notice Resolved
      .section-wrapper.pd-20.mg-t-5
        label.section-title Status
        fieldset#notice-issued
          label.section-label Notice Issued
          p.mb-0 = "Notice issued on #{@notice.created_at}."
          p.mg-b-20 == "Response required on or before #{tag.strong(@notice.response_required_date)} (#{@notice.response_required_status})."
          - if policy(@notice).response_received?
            = f.button 'Response Received', name: 'response_received', class: 'next action-button', formaction: response_received_notice_path
        fieldset#response-received
          label.section-label Response Received
          p == "Response received on #{tag.span(@notice.response_received_date, id: 'response-received-date')}."
          - if policy(@notice).follow_up?
            = f.button 'Follow-Up Completed', name: 'follow_up_date', id: 'follow-up-date-button', class: 'next action-button'
        fieldset#follow-up-completed
          label.section-label Follow-Up Completed
          p == "Follow-up inspection completed on #{tag.span(@notice.follow_up_inspection_date, id: 'follow-up-inspection-date')}."
          - if policy(@notice).resolve?
            = f.button 'Resolve Notice', name: 'resolve_notice', class: 'next action-button', formaction: resolve_notice_path
        fieldset#notice-resolved
          label.section-label Notice Resolved
          p.mb-0 == "Notice resolved on #{tag.span(@notice.notice_resolved_date, id: 'notice-resolved-date')}."
= render 'notes/show_notes', object: @notice
= render 'attachments/attachments', object: @notice, form: @notice.active?
#non-compliance-download-notice.modal
  .modal-dialog.wd-30p role="document"
    .modal-content
      .modal-header.pd-x-20
        h6.tx-14.mg-b-0.tx-uppercase.tx-inverse.tx-bold Download Notice of Non-Compliance
        button.close type="button" data-dismiss="modal" aria-label="Close"
          span aria-hidden="true" &times;
      .modal-body.pd-25
        p.text-center
          | Click below to download this Notice of Non-Compliance.
          br<>
          br<>
          == link_to content_tag(:i, '', class: 'fa fa-file-pdf-o mg-r-15 tx-danger tx-24') + "Download #{@notice.notice_number}.pdf", '#', data: { dismiss: 'modal' }, class: 'btn btn-outline-secondary btn-lg btn-block', id: 'download-pdf-notice-link', onclick: "javascript:window.location=\"#{download_notice_path(@notice, filename: @notice.notice_number)}\""
      .modal-footer
        button.btn.btn-secondary type="button" data-dismiss="modal" Close
= form_with model: @notice, url: follow_up_notice_path, method: :patch do |f|
  #follow-up-date.modal.fade
    .modal-dialog.wd-30p role="document"
      .modal-content
        .modal-header.pd-x-20
          h6.tx-14.mg-b-0.tx-uppercase.tx-inverse.tx-bold Follow-up Inspection Completed
          button.close type="button" data-dismiss="modal" aria-label="Close"
            span aria-hidden="true" &times;
        .modal-body.pd-25
          p
            | Enter the date this follow-up inspection was completed:
            br<>
            br<>
            .input-group
              .input-group-prepend
                .input-group-text
                  i.icon.ion-ios-calendar.tx-16.lh-0.op-6
              = f.text_field :follow_up_inspection_date, value: Date.current.strftime('%m/%d/%Y'), class: 'form-control fc-datepicker'
        .modal-footer
          = f.button 'Follow-Up Completed', name: 'follow_up_completed', class: 'btn btn-primary', id: 'follow-up-completed'
          button.btn.btn-secondary type="button" data-dismiss="modal" Close
