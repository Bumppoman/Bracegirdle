- content_for :title, "Review rules for #{@rules.cemetery.name}"
- content_for :breadcrumbs, breadcrumbs_helper([['Rules pending approval', rules_index_path], yield(:title)])
#review-rules.section-wrapper.pd-30
  label.section-title Rules
  .rules-revision.mg-b-10 id="revision-#{@revisions}"
    .row
      .col-lg-11
        label.section-label ="Revision #{@revisions} (submitted #{@rules.submission_date})"
      .col-lg-1.text-right
        a.toggle-revision.section-label href="#" data-revision="#{@revisions}"
          i.fa.fa-angle-down.tx-18
    .embed-responsive id="revision-#{@revisions}-content" style="padding-top: 100%; -webkit-overflow-scrolling: touch !important; overflow-y: auto !important; overflow-x: scroll;"
      iframe.embed-responsive-item src="#{attachment_display_link(@current_revision, request)}"
  - if @documents.any?
    - @documents.to_enum.with_index.reverse_each do |document, index|
      .rules-revision.mg-t-10
        .row
          .col-lg-11
            label.section-label ="Revision #{index + 1} (submitted #{document.created_at.to_date})"
          .col-lg-1.text-right
            a.toggle-revision.section-label href="#" data-revision="#{index + 1}"
              i.fa.fa-angle-down.tx-18
        .embed-responsive id="revision-#{index + 1}-content" style="padding-top: 100%; -webkit-overflow-scrolling: touch !important; overflow-y: auto !important; overflow-x: scroll; display: none;"
          iframe.embed-responsive-item src="#{attachment_display_link(document, request)}"
  = form_for @rules, url: approve_rules_path, method: :patch do |f|
    .form-layout-footer.mg-t-20
      - if policy(@rules).approve? && @rules.revision_received?
        = f.button 'Approve Rules', name: 'approve_rules', class: 'btn btn-primary mr-1'
        = f.button 'Request Revision', name: 'request_revision', formaction: request_revision_rules_path(@rules), class: 'btn btn-primary'
- if policy(@rules).approve?
  .section-wrapper.mg-t-5.pd-30
    label.section-title Upload Another Revision
    = form_for @rules, url: upload_revision_rules_path, method: :patch do |f|
      .row
        .col-lg-8
          .form-group.required
            = f.label :rules_documents, 'File', class: 'form-control-label'
            .custom-file
              = f.file_field :rules_documents, class: 'custom-file-input'
              = f.label :rules_documents, 'Choose file', class: 'custom-file-label'
            small.form-text.text-muted Acceptable file formats are .doc, .docx, and .pdf
        .col-lg-4
          .form-group.required
            = f.label :submission_date, 'Date Submitted', class: 'form-control-label'
            .input-group
              .input-group-prepend
                .input-group-text
                  i.icon.ion-ios-calendar.tx-16.lh-0.op-6
              = f.text_field :submission_date, value: Date.current.strftime('%m/%d/%Y'), class: 'form-control fc-datepicker'
      .form-layout-footer
        = f.button 'Submit', class: 'btn btn-primary bd-0 mr-1'
        = link_to 'Cancel', :dashboard_index, class: 'btn btn-secondary bd-0'
  = render 'notes/show_notes', object: @rules
- if policy(@rules).assign?
  .section-wrapper.mg-t-5.pd-30
    label.section-title Assign Rules
    = form_for @rules, url: assign_rules_path, method: :patch do |f|
      .row
        .col-lg-12
          .form-group.required
            = f.label :investigator, 'Investigator'
            = f.select :investigator, employee_options(nil, [:investigator]), { prompt: 'Unassigned' }, class: 'form-control select2-basic'
      .form-layout-footer
        = f.button 'Assign Rules', name: 'assign_rules', class: 'btn btn-primary'
